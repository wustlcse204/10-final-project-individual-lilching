{"version":3,"sources":["Artists.js","Tracks.js","App.js","reportWebVitals.js","index.js"],"names":["Artists","props","state","artistName","artistPlayCount","artistRanking","className","id","this","Component","Tracks","trackName","trackPlayCount","trackArtist","App","url","topArtists","artistsGrabbed","topTracks","tracksGrabbed","currentList","list","switchToTracks","bind","switchToArtists","self","console","log","undefined","length","artists","artist","map","anArtist","index","mbid","name","playcount","tracks","track","aTrack","onClick","event","fetch","then","response","json","data","setState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.849cc4b5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Artists.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass Artists extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            artistName: props.artistName,\n            artistPlayCount: props.artistPlayCount,\n            artistRanking: props.artistRanking\n        }\n    }\n\n    render() {\n\n    return (\n        <div className = \"row\" id = \"artist-div\">\n            <div className = \"col-xl-1 col-lg-1 col-md-1\" id = \"ranking\">{this.state.artistRanking}</div>\n            <div className = \"col-xl-11 col-lg-11 col-md-11\">\n                <p id = \"artist-name\">{this.state.artistName}</p>\n                <p>Artist playcount: {this.state.artistPlayCount}</p>\n                {/* <img src = {this.state.artistImage} alt = \"artist image\"></img> */}\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Artists;\n","import React, { Component } from 'react';\nimport './Tracks.css';\n\n\nclass Tracks extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            trackName: props.trackName,\n            trackPlayCount: props.trackPlayCount,\n            trackArtist: props.trackArtist,\n        }\n    }\n\n    render() {\n    return (\n        <div className = \"tracks-div\">\n                <h2>{this.state.trackName}</h2>\n                <p>Track playcount: {this.state.trackPlayCount}</p>\n                {/* <img src = {this.state.artistImage} alt = \"artist image\"></img> */}\n        </div>\n    );\n  }\n}\n\nexport default Tracks;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Artists from './Artists';\nimport Tracks from './Tracks';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n// var apiKey = \"ed5da9b66fbbb3d6781c2dec474a1eb9\"\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      url: \"http://ws.audioscrobbler.com/2.0/\", \n      topArtists:[], \n      artistsGrabbed: false, \n      topTracks: [],\n      tracksGrabbed: false,\n      currentList: \"artists\",\n      list: <p>list</p>\n    };\n    this.switchToTracks = this.switchToTracks.bind(this);\n    this.switchToArtists= this.switchToArtists.bind(this);\n\n  }\n\n\n  render() {\n    let self = this;\n    // console.log(self.state.topArtists)\n    // console.log(self.state.topTracks)\n    console.log(this.state.currentList)\n\n    if (self.state.topArtists.length === undefined){\n      self.state.artistsGrabbed = true;\n    }\n\n    if (self.state.topTracks.length === undefined){\n      self.state.tracksGrabbed = true;\n    }\n    if(self.state.currentList === \"artists\"){\n      // self.setState({list: self.state.artistsGrabbed})\n        this.state.list = self.state.artistsGrabbed\n        ? self.state.topArtists.artists.artist.map((anArtist, index) =>\n          <Artists \n          key={anArtist.mbid}\n          id={anArtist.mbid}\n          artistName={anArtist.name}\n          artistPlayCount={anArtist.playcount}\n          artistRanking={index+1}\n          />) //     favorite={this.favoriteArtist}\n        : <p>Top artists data being fetched.</p>\n    }\n    else if(this.state.currentList === \"tracks\"){\n      this.state.list = self.state.tracksGrabbed\n        ? this.state.topTracks.tracks.track.map((aTrack) =>\n          <Tracks \n          key={aTrack.name}\n          id={aTrack.name}\n          trackName={aTrack.name}\n          trackPlayCount={aTrack.playcount}\n          />) //     favorite={this.favoriteArtist}\n        : <p>Top tracks data being fetched.</p>\n    }\n    return (\n      <div id = \"main-container\">\n        <p id = \"heading\" className = \"row justify-content-center\">Last.fm Music Charts</p>\n        <div id = \"buttons-div\" className = \"row justify-content-center\"> \n          <button className = \"toggle-button col-md-2 col-4\" id = \"artist-toggle\" onClick = { event => this.switchToArtists(event)}>Top Artists</button>\n          <button className = \"toggle-button col-md-2 col-4\" id = \"track-toggle\" onClick = { event => this.switchToTracks(event)}>Top Tracks</button>  \n        </div>\n        <div id = \"list\" className = \"row justify-content-center\">\n          {this.state.list}\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    // Simple GET request using fetch\n    fetch('https://ws.audioscrobbler.com/2.0/?method=chart.gettopartists&api_key=ed5da9b66fbbb3d6781c2dec474a1eb9&format=json&limit=10')\n      .then(response => response.json())\n      .then(data => this.setState({ topArtists: data}));// this.setState({ totalReactPackages: data.total })); {console.log(data) }\n    \n      fetch('https://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=ed5da9b66fbbb3d6781c2dec474a1eb9&format=json&limit=10')\n      .then(response => response.json())\n      .then(data => this.setState({ topTracks: data}));\n  }\n\n  switchToTracks(){\n    this.state.currentList = \"tracks\"; \n    console.log(\"switching to tracks\");\n  }\n\n  switchToArtists(){\n    this.state.currentList = \"artists\"; \n    console.log(\"switching to artists\");\n  }\n\n  // renderList(currentList){\n  //   if (currentList == \"artists\"){\n\n  //   }\n  //   else if(currentList == \"tracks\"){\n\n  //   }\n  //   else{\n  //     return (\"an error occured. there is no list selected currently.\")\n  //   }\n  // }\n\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}