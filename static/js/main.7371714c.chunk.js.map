{"version":3,"sources":["Artists.js","Tracks.js","App.js","reportWebVitals.js","index.js"],"names":["Artists","props","state","artistName","artistPlayCount","artistRanking","numberWithCommas","bind","className","id","this","x","toString","replace","Component","Tracks","trackName","trackPlayCount","trackArtist","trackRanking","App","url","topArtists","artistsGrabbed","topTracks","tracksGrabbed","currentList","list","switchToTracks","switchToArtists","self","undefined","length","document","getElementById","classList","add","remove","artists","artist","map","anArtist","index","mbid","name","playcount","tracks","track","aTrack","onClick","event","fetch","then","response","json","data","setState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uWAiCeA,E,kDA3BX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,WAAYF,EAAME,WAClBC,gBAAiBH,EAAMG,gBACvBC,cAAeJ,EAAMI,eAEzB,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBAPV,E,0CAUlB,WAEA,OACI,sBAAKC,UAAY,MAAMC,GAAK,aAA5B,UACI,qBAAKD,UAAY,6BAA6BC,GAAK,UAAnD,SAA8DC,KAAKR,MAAMG,gBACzE,sBAAKG,UAAY,gCAAjB,UACI,mBAAGC,GAAK,cAAR,SAAuBC,KAAKR,MAAMC,aAClC,oBAAGM,GAAK,YAAR,+BAAuCC,KAAKJ,iBAAiBI,KAAKR,MAAME,4B,8BAKpF,SAAiBO,GACb,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,S,GAxBvCC,aC6BPC,G,wDA5BX,WAAYd,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTc,UAAWf,EAAMe,UACjBC,eAAgBhB,EAAMgB,eACtBC,YAAajB,EAAMiB,YACnBC,aAAclB,EAAMkB,cAExB,EAAKb,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBARV,E,0CAWlB,WACA,OACI,sBAAKC,UAAY,MAAMC,GAAK,aAA5B,UACI,qBAAKD,UAAY,6BAA6BC,GAAK,UAAnD,SAA8DC,KAAKR,MAAMiB,eACzE,sBAAKX,UAAY,gCAAjB,UACI,mBAAGC,GAAK,aAAR,SAAsBC,KAAKR,MAAMc,YACjC,mBAAGP,GAAK,SAAR,SAAkBC,KAAKR,MAAMgB,cAC7B,oBAAGT,GAAK,YAAR,8BAAsCC,KAAKJ,iBAAiBI,KAAKR,MAAMe,2B,8BAKnF,SAAiBN,GACb,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,S,GAzBxCC,cCsGNM,E,kDA/Fb,WAAYnB,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXmB,IAAK,oCACLC,WAAW,GACXC,gBAAgB,EAChBC,UAAW,GACXC,eAAe,EACfC,YAAa,UACbC,KAAM,sCAER,EAAKC,eAAiB,EAAKA,eAAerB,KAApB,gBACtB,EAAKsB,gBAAiB,EAAKA,gBAAgBtB,KAArB,gBAZN,E,0CAiBlB,WAAU,IAAD,OACHuB,EAAOpB,KA2CX,YAzCqCqB,IAAjCD,EAAK5B,MAAMoB,WAAWU,SACxBF,EAAK5B,MAAMqB,gBAAiB,QAGMQ,IAAhCD,EAAK5B,MAAMsB,UAAUQ,SACvBF,EAAK5B,MAAMuB,eAAgB,GAEC,YAA3BK,EAAK5B,MAAMwB,aACmC,MAA3CO,SAASC,eAAe,kBAC1BD,SAASC,eAAe,iBAAiBC,UAAUC,IAAI,YACvDH,SAASC,eAAe,gBAAgBC,UAAUE,OAAO,aAG3D3B,KAAKR,MAAMyB,KAAOG,EAAK5B,MAAMqB,eAC3BO,EAAK5B,MAAMoB,WAAWgB,QAAQC,OAAOC,KAAI,SAACC,EAAUC,GAAX,OACzC,cAAC,EAAD,CAEAjC,GAAIgC,EAASE,KACbxC,WAAYsC,EAASG,KACrBxC,gBAAiBqC,EAASI,UAC1BxC,cAAeqC,EAAM,GAJhBD,EAASE,SAMd,iEAE+B,WAA3BjC,KAAKR,MAAMwB,cAC8B,MAA3CO,SAASC,eAAe,kBAC1BD,SAASC,eAAe,gBAAgBC,UAAUC,IAAI,YACtDH,SAASC,eAAe,iBAAiBC,UAAUE,OAAO,aAE5D3B,KAAKR,MAAMyB,KAAOG,EAAK5B,MAAMuB,cAC3Bf,KAAKR,MAAMsB,UAAUsB,OAAOC,MAAMP,KAAI,SAACQ,EAAQN,GAAT,OACtC,cAAC,EAAD,CAEAjC,GAAIuC,EAAOJ,KACX5B,UAAWgC,EAAOJ,KAClB3B,eAAgB+B,EAAOH,UACvB1B,aAAcuB,EAAM,EACpBxB,YAAa8B,EAAOT,OAAOK,MALtBI,EAAOJ,SAOZ,gEAGF,sBAAKnC,GAAK,iBAAV,UACE,mBAAGA,GAAK,UAAUD,UAAY,6BAA9B,kCACA,sBAAKC,GAAK,cAAcD,UAAY,6BAApC,UACE,wBAAQA,UAAY,+BAA+BC,GAAK,gBAAgBwC,QAAY,SAAAC,GAAK,OAAI,EAAKrB,gBAAgBqB,IAAlH,yBACA,wBAAQ1C,UAAY,+BAA+BC,GAAK,eAAewC,QAAY,SAAAC,GAAK,OAAI,EAAKtB,eAAesB,IAAhH,2BAEF,qBAAKzC,GAAK,OAAOD,UAAY,6BAA7B,SACGE,KAAKR,MAAMyB,Y,+BAMpB,WAAqB,IAAD,OAElBwB,MAAM,+HACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAElC,WAAYiC,OAE1CJ,MAAM,8HACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEhC,UAAW+B,S,4BAG7C,WACE7C,KAAK8C,SAAS,CAAC9B,YAAa,a,6BAG9B,WACEhB,KAAK8C,SAAS,CAAC9B,YAAa,gB,GA7FdZ,aCEH2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASC,eAAe,SAM1BuB,M","file":"static/js/main.7371714c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Artists.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass Artists extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            artistName: props.artistName,\n            artistPlayCount: props.artistPlayCount,\n            artistRanking: props.artistRanking\n        }\n        this.numberWithCommas = this.numberWithCommas.bind(this)\n    }\n\n    render() {\n\n    return (\n        <div className = \"row\" id = \"artist-div\">\n            <div className = \"col-xl-1 col-lg-1 col-md-1\" id = \"ranking\">{this.state.artistRanking}</div>\n            <div className = \"col-xl-11 col-lg-11 col-md-11\">\n                <p id = \"artist-name\">{this.state.artistName}</p>\n                <p id = \"playcount\">Artist playcount: {this.numberWithCommas(this.state.artistPlayCount)}</p>\n            </div>\n        </div>\n    );\n    }\n    numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n}\n\nexport default Artists;\n","import React, { Component } from 'react';\nimport './Tracks.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass Tracks extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            trackName: props.trackName,\n            trackPlayCount: props.trackPlayCount,\n            trackArtist: props.trackArtist,\n            trackRanking: props.trackRanking,\n        }\n        this.numberWithCommas = this.numberWithCommas.bind(this)\n    }\n\n    render() {\n    return (\n        <div className = \"row\" id = \"tracks-div\">\n            <div className = \"col-xl-1 col-lg-1 col-md-1\" id = \"ranking\">{this.state.trackRanking}</div>\n            <div className = \"col-xl-11 col-lg-11 col-md-11\">\n                <p id = \"track-name\">{this.state.trackName}</p>\n                <p id = \"artist\">{this.state.trackArtist}</p>\n                <p id = \"playcount\">Track playcount: {this.numberWithCommas(this.state.trackPlayCount)}</p>\n            </div>\n        </div>\n    );\n    }\n    numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n}\n\nexport default Tracks;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Artists from './Artists';\nimport Tracks from './Tracks';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n// var apiKey = \"ed5da9b66fbbb3d6781c2dec474a1eb9\"\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      url: \"http://ws.audioscrobbler.com/2.0/\", \n      topArtists:[], \n      artistsGrabbed: false, \n      topTracks: [],\n      tracksGrabbed: false,\n      currentList: \"artists\",\n      list: <p>list</p>\n    };\n    this.switchToTracks = this.switchToTracks.bind(this);\n    this.switchToArtists= this.switchToArtists.bind(this);\n\n  }\n\n\n  render() {\n    let self = this;\n\n    if (self.state.topArtists.length === undefined){\n      self.state.artistsGrabbed = true;\n    }\n\n    if (self.state.topTracks.length === undefined){\n      self.state.tracksGrabbed = true;\n    }\n    if(self.state.currentList === \"artists\"){\n      if (document.getElementById(\"track-toggle\") != null){\n        document.getElementById(\"artist-toggle\").classList.add(\"selected\");\n        document.getElementById(\"track-toggle\").classList.remove(\"selected\");\n      }\n     \n      this.state.list = self.state.artistsGrabbed\n      ? self.state.topArtists.artists.artist.map((anArtist, index) =>\n        <Artists \n        key={anArtist.mbid}\n        id={anArtist.mbid}\n        artistName={anArtist.name}\n        artistPlayCount={anArtist.playcount}\n        artistRanking={index+1}\n        />) //     favorite={this.favoriteArtist}\n      : <p>Top artists data being fetched.</p>\n    }\n    else if(this.state.currentList === \"tracks\"){\n      if (document.getElementById(\"track-toggle\") != null){\n        document.getElementById(\"track-toggle\").classList.add(\"selected\");\n        document.getElementById(\"artist-toggle\").classList.remove(\"selected\");\n      }\n      this.state.list = self.state.tracksGrabbed\n      ? this.state.topTracks.tracks.track.map((aTrack, index) =>\n        <Tracks \n        key={aTrack.name}\n        id={aTrack.name}\n        trackName={aTrack.name}\n        trackPlayCount={aTrack.playcount}\n        trackRanking={index+1}\n        trackArtist={aTrack.artist.name}\n        />) //     favorite={this.favoriteArtist}\n      : <p>Top tracks data being fetched.</p>\n    }\n    return (\n      <div id = \"main-container\">\n        <p id = \"heading\" className = \"row justify-content-center\">Last.fm Music Charts</p>\n        <div id = \"buttons-div\" className = \"row justify-content-center\"> \n          <button className = \"toggle-button col-md-2 col-4\" id = \"artist-toggle\" onClick = { event => this.switchToArtists(event)}>Top Artists</button>\n          <button className = \"toggle-button col-md-2 col-4\" id = \"track-toggle\" onClick = { event => this.switchToTracks(event)}>Top Tracks</button>  \n        </div>\n        <div id = \"list\" className = \"row justify-content-center\">\n          {this.state.list}\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    // Simple GET request using fetch\n    fetch('https://ws.audioscrobbler.com/2.0/?method=chart.gettopartists&api_key=ed5da9b66fbbb3d6781c2dec474a1eb9&format=json&limit=10')\n      .then(response => response.json())\n      .then(data => this.setState({ topArtists: data}));\n    \n      fetch('https://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=ed5da9b66fbbb3d6781c2dec474a1eb9&format=json&limit=10')\n      .then(response => response.json())\n      .then(data => this.setState({ topTracks: data}));\n  }\n\n  switchToTracks(){\n    this.setState({currentList: \"tracks\"});\n  }\n\n  switchToArtists(){\n    this.setState({currentList: \"artists\"});\n  }\n\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}