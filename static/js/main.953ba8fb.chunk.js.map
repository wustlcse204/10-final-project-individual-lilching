{"version":3,"sources":["Artists.js","Tracks.js","App.js","reportWebVitals.js","index.js"],"names":["Artists","props","state","artistName","artistPlayCount","className","id","this","Component","Tracks","trackName","trackPlayCount","trackArtist","App","url","topArtists","artistsGrabbed","topTracks","tracksGrabbed","self","console","log","undefined","length","artists","artist","map","anArtist","mbid","name","playcount","tracks","track","aTrack","fetch","then","response","json","data","setState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yVA2BeA,E,kDAtBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,WAAYF,EAAME,WAClBC,gBAAiBH,EAAMG,iBAJb,E,0CAQlB,WACA,OACI,sBAAKC,UAAY,iBAAjB,UACI,qBAAKA,UAAY,8BAA8BC,GAAK,UAApD,eACA,sBAAKD,UAAY,8BAAjB,UACI,6BAAKE,KAAKL,MAAMC,aAChB,mDAAsBI,KAAKL,MAAME,6B,GAf3BI,aCqBPC,G,wDApBX,WAAYR,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTQ,UAAWT,EAAMS,UACjBC,eAAgBV,EAAMU,eACtBC,YAAaX,EAAMW,aALT,E,0CASlB,WACA,OACI,sBAAKP,UAAY,aAAjB,UACQ,6BAAKE,KAAKL,MAAMQ,YAChB,kDAAqBH,KAAKL,MAAMS,yB,GAd3BH,cCmFNK,E,kDA7Eb,WAAYZ,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXY,IAAK,oCACLC,WAAW,GACXC,gBAAgB,EAChBC,UAAW,GACXC,eAAe,GAPD,E,0CAYlB,WACE,IAAIC,EAAOZ,KAqBX,OApBAa,QAAQC,IAAIF,EAAKjB,MAAMa,YACvBK,QAAQC,IAAIF,EAAKjB,MAAMe,gBAGcK,IAAjCH,EAAKjB,MAAMa,WAAWQ,SACxBJ,EAAKjB,MAAMc,gBAAiB,QASMM,IAAhCH,EAAKjB,MAAMe,UAAUM,SACvBJ,EAAKjB,MAAMgB,eAAgB,GAI7BE,QAAQC,IAAIF,EAAKjB,MAAMc,gBAErB,sBAAKV,GAAK,iBAAV,UACE,mBAAGA,GAAK,UAAR,kCACA,wBAAQD,UAAY,gBAAgBC,GAAK,gBAAzC,yBACA,wBAAQD,UAAY,gBAAgBC,GAAK,eAAzC,wBACCa,EAAKjB,MAAMc,eACVT,KAAKL,MAAMa,WAAWS,QAAQC,OAAOC,KAAI,SAACC,GAAD,OACzC,cAAC,EAAD,CAEArB,GAAIqB,EAASC,KACbzB,WAAYwB,EAASE,KACrBzB,gBAAiBuB,EAASG,WAHrBH,EAASC,SAKd,gEAGDT,EAAKjB,MAAMgB,cACVX,KAAKL,MAAMe,UAAUc,OAAOC,MAAMN,KAAI,SAACO,GAAD,OACtC,cAAC,EAAD,CAEA3B,GAAI2B,EAAOJ,KACXnB,UAAWuB,EAAOJ,KAClBlB,eAAgBsB,EAAOH,WAHlBG,EAAOJ,SAKZ,oE,+BAOR,WAAqB,IAAD,OAElBK,MAAM,+HACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAExB,WAAYuB,OAE1CJ,MAAM,8HACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEtB,UAAWqB,W,GA3E7B9B,aCIHgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.953ba8fb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Artists.css';\n\n\nclass Artists extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            artistName: props.artistName,\n            artistPlayCount: props.artistPlayCount\n        }\n    }\n\n    render() {\n    return (\n        <div className = \"row artist-div\">\n            <div className = \"col-xl-8 col-lg-6 col-md-12\" id = \"ranking\">1</div>\n            <div className = \"col-xl-4 col-lg-6 col-md-12\">\n                <h2>{this.state.artistName}</h2>\n                <p>Artist playcount: {this.state.artistPlayCount}</p>\n                {/* <img src = {this.state.artistImage} alt = \"artist image\"></img> */}\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Artists;\n","import React, { Component } from 'react';\nimport './Tracks.css';\n\n\nclass Tracks extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            trackName: props.trackName,\n            trackPlayCount: props.trackPlayCount,\n            trackArtist: props.trackArtist,\n        }\n    }\n\n    render() {\n    return (\n        <div className = \"tracks-div\">\n                <h2>{this.state.trackName}</h2>\n                <p>Track playcount: {this.state.trackPlayCount}</p>\n                {/* <img src = {this.state.artistImage} alt = \"artist image\"></img> */}\n        </div>\n    );\n  }\n}\n\nexport default Tracks;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Artists from './Artists';\nimport Tracks from './Tracks';\n\n\n// var apiKey = \"ed5da9b66fbbb3d6781c2dec474a1eb9\"\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      url: \"http://ws.audioscrobbler.com/2.0/\", \n      topArtists:[], \n      artistsGrabbed: false, \n      topTracks: [],\n      tracksGrabbed: false\n    };\n  }\n\n\n  render() {\n    let self = this;\n    console.log(self.state.topArtists)\n    console.log(self.state.topTracks)\n    // console.log(self.state.topArtists.length)\n\n    if (self.state.topArtists.length === undefined){\n      self.state.artistsGrabbed = true;\n      // console.log(\"hi\" + JSON.stringify(self.state.topArtists.artists) )\n      // console.log(\"hi \" + JSON.stringify(self.state.topArtists.artists.artist) )\n\n      // this.state.topArtists.artists.artist.map((anArtist) =>\n      //     console.log(anArtist.name))\n  \n    }\n\n    if (self.state.topTracks.length === undefined){\n      self.state.tracksGrabbed = true;\n  \n    }\n\n    console.log(self.state.artistsGrabbed)\n    return (\n      <div id = \"main-container\">\n        <p id = \"heading\">Last.fm Music Charts</p>\n        <button className = \"toggle-button\" id = \"artist-toggle\">Top Artists</button>\n        <button className = \"toggle-button\" id = \"track-toggle\">Top Tracks</button>\n        {self.state.artistsGrabbed\n        ? this.state.topArtists.artists.artist.map((anArtist) =>\n          <Artists \n          key={anArtist.mbid}\n          id={anArtist.mbid}\n          artistName={anArtist.name}\n          artistPlayCount={anArtist.playcount}\n          />) //     favorite={this.favoriteArtist}\n        : <p>Top artists data being fetched.</p>\n        }\n\n        {self.state.tracksGrabbed\n        ? this.state.topTracks.tracks.track.map((aTrack) =>\n          <Tracks \n          key={aTrack.name}\n          id={aTrack.name}\n          trackName={aTrack.name}\n          trackPlayCount={aTrack.playcount}\n          />) //     favorite={this.favoriteArtist}\n        : <p>Top tracks data being fetched.</p>\n        }\n \n      </div>\n    );\n  }\n\n  componentDidMount() {\n    // Simple GET request using fetch\n    fetch('https://ws.audioscrobbler.com/2.0/?method=chart.gettopartists&api_key=ed5da9b66fbbb3d6781c2dec474a1eb9&format=json&limit=10')\n      .then(response => response.json())\n      .then(data => this.setState({ topArtists: data}));// this.setState({ totalReactPackages: data.total })); {console.log(data) }\n    \n      fetch('https://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=ed5da9b66fbbb3d6781c2dec474a1eb9&format=json&limit=10')\n      .then(response => response.json())\n      .then(data => this.setState({ topTracks: data}));\n  }\n\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}